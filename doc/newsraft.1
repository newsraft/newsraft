.\" Generated by scdoc 1.11.3
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "NEWSRAFT" "1" "2025-09-27"
.PP
.SH NAME
.PP
newsraft - feed reader for terminal
.PP
.SH SYNOPSIS
.PP
\fBnewsraft\fR [\fB-f\fR \fIFILE1\fR] [\fB-c\fR \fIFILE2\fR] [\fB-d\fR \fIFILE3\fR] [\fB-l\fR \fIFILE4\fR] [\fB-e\fR \fIACTION\fR] [\fB-v\fR] [\fB-h\fR]
.PP
.SH DESCRIPTION
.PP
Newsraft is a small text based program for reading syndication feeds.\& It obtains
content from a given set of sources and lets you browse it all via one
streamlined user interface.\&
.PP
.SH OPTIONS
.PP
\fB-f\fR \fIFILE\fR
.RS 4
Force \fBfeeds\fR file to \fIFILE\fR.\&
.PP
.RE
\fB-c\fR \fIFILE\fR
.RS 4
Force \fBconfig\fR file to \fIFILE\fR.\&
.PP
.RE
\fB-d\fR \fIFILE\fR
.RS 4
Force \fBdatabase\fR file to \fIFILE\fR.\&
.PP
.RE
\fB-l\fR \fIFILE\fR
.RS 4
Write logs to \fIFILE\fR.\&
.PP
.RE
\fB-e\fR \fIACTION\fR
.RS 4
Execute one-time \fIACTION\fR from the following list:
.RS 4
\fBconvert-opml-to-feeds\fR (takes OPML from standard input)
.br
\fBconvert-feeds-to-opml\fR (takes feeds from \fBfeeds\fR file)
.br
\fBreload-all\fR
.br
\fBprint-unread-items-count\fR
.br
\fBpurge-abandoned\fR
.PP
.RE
.RE
\fB-v\fR
.RS 4
Print version information.\&
.PP
.RE
\fB-h\fR
.RS 4
Print usage information.\&
.PP
.RE
.SH STARTER GUIDE
.PP
To start using Newsraft you have to create a \fBfeeds\fR file with the list of links
to feeds you want to receive news from.\& Check out \fBFEEDS FILE\fR section for file
syntax and valid paths.\&
.PP
When \fBfeeds\fR file is ready, you can launch Newsraft.\& There are only 4 menus you
will have to deal with: \fIsections\fR, \fIfeeds\fR, \fIitems\fR and \fIpager\fR.\& Default binds
are listed in \fBACTIONS\fR section.\&
.PP
\fISections\fR menu consists of section entries which are needed to organize feeds
in groups to be able to process them in bulk.\& They are kind of directories for
feeds.\& If you didn'\&t specify any section declarations in your \fBfeeds\fR file then
you will get to the \fIfeeds\fR menu straightaway.\&
.PP
\fIFeeds\fR menu consists of feed entries.\& Every feed entry contains news downloaded
from one specific source which you have set in \fBfeeds\fR file.\& To update a single
feed you have to select it and press \fBr\fR or \fBR\fR if you want to update all feeds.\&
From \fIfeeds\fR menu you can get to the \fIitems\fR menu by entering some feed.\&
.PP
\fIItems\fR menu consists of feed item entries (i.\& e.\& single pieces of news) which
you get when you update feeds in the previous menu.\& Every feed item entry has
two switchable properties - read state and importance state.\& Keys to change read
state: \fBd\fR to mark read, \fBD\fR to mark unread, \fB^D\fR to mark everything read.\& Keys
to change importance state: \fBf\fR to flag important, \fBF\fR to flag unimportant.\& To
view item'\&s content you have to go to \fIpager\fR menu by entering selected item.\&
.PP
\fIPager\fR menu will display some details about selected item and render its
content if it was provided by feed.\& Usually feed item entries have a links
section with one link pointing to a related web page and several links that were
mentioned in the item'\&s content.\& You can copy these links into your clipboard
with \fBy\fR key and open them in your web browser with \fBo\fR key.\& To target a key
action to link with a specific index you have to prefix your key with this
index.\& For example, \fB5y\fR will copy fifth link and \fB17o\fR will open seventeenth
link in the web browser.\& You can also setup custom command bindings to execute
any commands with these links.\& Consider this \fBconfig\fR file:
.PP
.RS 4
\fIbind m exec mpv "%l"\fR
.br
\fIbind f exec feh "%l"\fR
.PP
.RE
With this you will be able to open any link in \fBmpv\fR(1) and \fBfeh\fR(1) directly
from your terminal!\& Isn'\&t it awesome?\& It is freaking amazing!\&
.PP
For both \fIsections\fR menu and \fIfeeds\fR menu there is a special explore mode.\& You
can toggle it by pressing the \fBtab\fR key.\& It'\&s truly miraculous: it reveals all
the news in the current context (combines news from all feeds of the current
menu into one list).\& This mode may come in handy when you want to quickly scroll
through all the news without switching between sections and feeds back and forth.\&
.PP
And for a dessert, I'\&ll tell you about the search functionality.\& You can type
\fB/\fR to begin search input - enter the desired query here and press \fBEnter\fR.\& This
will open up an \fIitems\fR menu with all the items matching your query in the
current context.\&
.PP
.SH CONFIGURATION
.PP
.SS FEEDS FILE
.PP
This file contains feed entries that Newsraft will display and process.\& There
are 4 types of lines in \fBfeeds\fR file.\&
.PP
Comment lines start with \fI#\fR character.\& These lines are completely ignored.\& For
example:
.PP
.RS 4
\fI# Look closely.\& The beautiful may be small.\&\fR
.PP
.RE
Feed lines start with a URL.\& After at least one whitespace character, the name
of the feed may be specified - it must be enclosed in double quotes.\& For
example:
.PP
.RS 4
\fIhttps://example.\&org/feed.\&xml "Lorem Ipsum Blog"\fR
.PP
.RE
Generator lines start with a command enclosed in \fB$()\fR.\& These act just like feed
lines but instead of fetching resources from a remote server they use the output
of the specified command to obtain the content.\&
.PP
.RS 4
\fI$(cat ~/local-feed.\&xml) "Lorem Ipsum Blog"\fR
.PP
.RE
Section lines start with \fB@\fR character.\& After any number of whitespace characters,
the name of the section must be specified.\& For example:
.PP
.RS 4
\fI@ Software Releases\fR
.PP
.RE
Both feed and section lines allow you to set individual settings and binds for
them.\& The syntax is as follows:
.PP
.RS 4
\fI@ Lorem Ipsum < reload-period 1440\fR
.br
\fIhttp://example.\&org/feed1.\&xml "Dolor Sit" < reload-period 60; item-limit 500\fR
.br
\fIhttp://example.\&org/feed2.\&xml "Id Est" < bind b mark-read; exec book.\&sh "%l"\fR
.PP
.RE
Settings set for feeds take precedence over the settings specified for sections.\&
Not every setting supports individual assignment - only settings with asterisk
\fB(*)\fR on them do (see \fBSETTINGS\fR section).\&
.PP
Search precedence:
.PD 0
.IP 1. 4
\fI$XDG_CONFIG_HOME\fR/newsraft/feeds
.IP 2. 4
\fI$HOME\fR/.\&config/newsraft/feeds
.IP 3. 4
\fI$HOME\fR/.\&newsraft/feeds
.PD
.PP
.SS CONFIG FILE
.PP
This file is used to override default settings and bindings of Newsraft.\&
Presence of \fBconfig\fR file is totally optional and Newsraft will work without it
just fine.\& There are 3 types of lines in \fBconfig\fR file.\&
.PP
Comment lines start with \fI#\fR character.\& These lines are completely ignored.\& For
example:
.PP
.RS 4
\fI# Good design is as little design as possible.\&\fR
.PP
.RE
Setting lines start with a setting name and end with a setting value.\& Available
settings are listed in the \fBSETTINGS\fR and \fBCOLOR SETTINGS\fR sections.\& Here are a
couple of examples:
.PP
.RS 4
\fBscrolloff\fR \fI5000\fR
.br
\fBlist-entry-date-format\fR \fI"%D"\fR
.br
\fBfeeds-menu-paramount-explore\fR \fItrue\fR
.PP
.RE
Binding lines start with the \fBbind\fR word.\& They define actions that are performed
when certain keys are pressed.\& Complete list of available actions can be found
in the \fBACTIONS\fR section.\& Here'\&s an example:
.PP
.RS 4
\fBbind\fR r \fIreload-all\fR
.PP
.RE
The special \fIexec\fR action makes it possible to run shell commands when the bound
key is pressed.\& Specifiers within the command are replaced with values
corresponding to the currently selected entry as per \fBmenu-item-entry-format\fR:
.PP
.RS 4
\fBbind\fR m \fIexec\fR setsid mpv --terminal=no "%l" &
.PP
.RE
The \fIedit\fR action runs a specified SQL query on the \fBdatabase\fR, so please be
careful!\& \fI@selected\fR specifier is replaced with a condition which identifies the
currently selected entry - make sure to include it if you want to target
individual item/feed rather than the whole database:
.PP
.RS 4
\fBbind\fR w \fIedit\fR UPDATE items SET user_data = json_set(IFNULL(user_data, '\&{}'\&), '\&$.\&toWatch'\&, 1) WHERE \fI@selected\fR
.br
\fBbind\fR W \fIedit\fR UPDATE items SET user_data = json_set(IFNULL(user_data, '\&{}'\&), '\&$.\&toWatch'\&, 0) WHERE \fI@selected\fR
.PP
.RE
Use the \fIfind\fR action to retrieve items based on a specified SQL condition in
the current context.\& For instance, to search for items marked as toWatch (as
shown in the previous example), one can use the bindings like the following:
.PP
.RS 4
\fBbind\fR f \fIfind\fR user_data LIKE '\&%"toWatch":1%'\&
.br
\fBbind\fR f \fIfind\fR json_extract(user_data, '\&$.\&toWatch'\&) = 1
.PP
.RE
Binding lines can fit multiple actions in a single key.\& These actions will be
executed in the order in which they are specified.\& Assigned actions
must be separated with semicolon (;) characters, for example:
.PP
.RS 4
\fBbind\fR key \fIaction\fR; \fIexec\fR command; \fIaction\fR; \fIedit\fR query; \fIaction\fR
.PP
.RE
In case you want to disable some binding which was set in Newsraft by default,
you can use a line according to this format:
.PP
.RS 4
\fBunbind\fR key
.PP
.RE
Search precedence:
.PD 0
.IP 1. 4
\fI$XDG_CONFIG_HOME\fR/newsraft/config
.IP 2. 4
\fI$HOME\fR/.\&config/newsraft/config
.IP 3. 4
\fI$HOME\fR/.\&newsraft/config
.PD
.PP
.SS DATABASE FILE
.PP
This file stores everything you download from feeds in \fBsqlite3\fR(1) format.\&
Although you now know the format in which the data is stored, it is highly
recommended to avoid modifying the database manually - things will break and
it will be very sad.\&
.PP
Search precedence:
.PD 0
.IP 1. 4
\fI$XDG_DATA_HOME\fR/newsraft/newsraft.\&sqlite3
.IP 2. 4
\fI$HOME\fR/.\&local/share/newsraft/newsraft.\&sqlite3
.IP 3. 4
\fI$HOME\fR/.\&newsraft/newsraft.\&sqlite3
.PD
.PP
.SH SETTINGS
.PP
Settings with asterisk \fB(*)\fR on them can be set for individual feeds and sections.\&
.PP
.SS reload-period (*)
Default: \fI0\fR.\& Feed auto reload period in minutes.\& If set to \fI0\fR, no auto reloads
will be run.\&
.PP
.SS suppress-errors (*)
Default: \fIfalse\fR.\& If \fItrue\fR, feed update error indication in the menu will be
disabled.\& It'\&s recommended to set this setting only for specific feeds that are
expected to fail frequently and you are tired of seeing their errors.\&
.PP
.SS item-rule (*)
Default: \fI""\fR.\& Item search condition when accessing database.\& This can be very
useful in managing feeds with a heavy spam flow: you set a condition based on
some parameters and only those entries that meet this condition will be shown in
the feed.\& It'\&s specified in SQL format.\& It probably only makes sense to set this
setting for individual feeds, and not globally (see \fBFEEDS FILE\fR section to
understand how).\&
.PP
Available parameters:
.TS
l l lx
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l.
T{
\fIguid\fR
T}	T{
(string)
T}	T{
Globally unique identifier of the article which is expected to be unique within the originating feed
T}
T{
\fItitle\fR
T}	T{
(string)
T}	T{
Title of the article
T}
T{
\fIlink\fR
T}	T{
(string)
T}	T{
URL of the article
T}
T{
\fIcontent\fR
T}	T{
(string)
T}	T{
Content of the article which is stored exactly as it appears in the feed, with all original HTML preserved
T}
T{
\fIattachments\fR
T}	T{
(string)
T}	T{
Serialized string of all attachments with URL links, MIME types and byte sizes
T}
T{
\fIpersons\fR
T}	T{
(string)
T}	T{
Serialized string of all people related to the article with names and email addresses
T}
T{
\fIdownload_date\fR
T}	T{
(integer)
T}	T{
Timestamp of download date in seconds since 1970
T}
T{
\fIpublication_date\fR
T}	T{
(integer)
T}	T{
Timestamp of publication date in seconds since 1970
T}
T{
\fIupdate_date\fR
T}	T{
(integer)
T}	T{
Timestamp of update date in seconds since 1970
T}
T{
\fIuser_data\fR
T}	T{
(string)
T}	T{
User-defined data for the item.\& It can be modified using the \fBedit\fR action (see \fBCONFIG FILE\fR section)
T}
.TE
.sp 1
Here are some examples of correct setting values:
.PP
.RS 4
\fItitle NOT LIKE '\&%Rust%'\&\fR
.br
\fIpersons LIKE '\&%PHARMACIST%'\& OR persons LIKE '\&%OFFL1NX%'\&\fR
.br
\fIattachments LIKE '\&%audio/mp3%'\& OR attachments LIKE '\&%video/mp4%'\&\fR
.br
\fICAST(strftime('\&%Y'\&, publication_date, '\&unixepoch'\&) AS INTEGER) >= 2024\fR
.br
\fINOT (title REGEXP '\&.\&+:.\&+\e".\&+\e".\&+by'\& OR title LIKE '\&%(ultra slowed)%'\& OR title LIKE '\&%(1 hour version)%'\&)\fR
.PP
.RE
REGEXP operator uses POSIX Extended Regular Expression syntax, see \fBregex\fR(7).\&
.PP
.SS item-limit (*)
Default: \fI0\fR.\& Maximum number of items stored in a feed.\& If set to \fI0\fR, no limit
will be set.\&
.PP
.SS item-limit-unread (*)
Default: \fItrue\fR.\& If \fItrue\fR, \fBitem-limit\fR setting will also cap unread items.\&
.PP
.SS item-limit-important (*)
Default: \fIfalse\fR.\& If \fItrue\fR, \fBitem-limit\fR setting will also cap important items.\&
.PP
.SS scrolloff
Default: \fI0\fR.\& Minimal number of list menu entries to keep above and below the
selected entry.\& If you set it to a very large value the selected entry will
always be in the middle of the list menu (except for start and end of the list
menu).\&
.PP
.SS scrollwrap
Default: \fIfalse\fR.\& If \fItrue\fR, moving down while on the last item in a list
will wrap around to the top and vice versa.\&
.PP
.SS pager-width (*)
Default: \fI100\fR.\& Pager width in characters.\& If set to \fI0\fR, the pager will take up
all available space.\&
.PP
.SS pager-centering (*)
Default: \fItrue\fR.\& If \fItrue\fR and \fBpager-width\fR is not \fI0\fR, pager will center its
content horizontally.\&
.PP
.SS menu-item-sorting
Default: \fItime-desc\fR.\& Sorting order for the items menu.\& Available values:
\fItime-desc\fR, \fItime-asc\fR, \fItime-download-desc\fR, \fItime-download-asc\fR,
\fItime-publication-desc\fR, \fItime-publication-asc\fR, \fItime-update-desc\fR,
\fItime-update-asc\fR, \fIrowid-desc\fR, \fIrowid-asc\fR, \fIunread-desc\fR, \fIunread-asc\fR,
\fIimportant-desc\fR, \fIimportant-asc\fR, \fIalphabet-desc\fR, \fIalphabet-asc\fR.\&
.PP
.SS menu-feed-sorting
Default: \fInone\fR.\& Sorting order for the feeds menu.\& Available values:
\fIunread-desc\fR, \fIunread-asc\fR, \fIalphabet-desc\fR, \fIalphabet-asc\fR.\&
.PP
.SS menu-section-sorting
Default: \fInone\fR.\& Sorting order for the sections menu.\& Available values:
\fIunread-desc\fR, \fIunread-asc\fR, \fIalphabet-desc\fR, \fIalphabet-asc\fR.\&
.PP
.SS menu-responsiveness
Default: \fItrue\fR.\& If \fItrue\fR, update menu contents as soon as possible.\&
If \fIfalse\fR, the menu will be updated only when you re-open it.\&
.PP
.SS open-in-browser-command (*)
Default: \fIauto\fR.\& Shell command for \fBopen-in-browser\fR action.\& If set to \fIauto\fR,
most operating systems will get \fI${BROWSER:-xdg-open} "%l"\fR while macOS users
have it set to \fIopen "%l"\fR.\&
.PP
.SS copy-to-clipboard-command
Default: \fIauto\fR.\& Shell command for copying text to clipboard.\& All copied data is
piped into the standard input of the specified command.\& If set to \fIauto\fR,
Newsraft will determine the appropriate command based on the user environment:
.PP
.PD 0
.IP \(bu 4
\fI"wl-copy"\fR if environment variable WAYLAND_DISPLAY is set
.IP \(bu 4
\fI"xclip -selection clipboard"\fR if environment variable DISPLAY is set
.IP \(bu 4
\fI"pbcopy"\fR if Newsraft was built for macOS operating system
.IP \(bu 4
\fI"newsraft-osc-52"\fR otherwise
.PD
.PP
\fI"newsraft-osc-52"\fR is a special value that doesn'\&t run an external command but
instead triggers the OSC 52 escape sequence, instructing the terminal to copy
data directly to the system clipboard.\& This behavior is especially useful when
running Newsraft over \fBssh\fR(1), as it allows clipboard operations to affect the
local system rather than the remote one.\&
.PP
.SS notification-command (*)
Default: \fIauto\fR.\& Shell command for invoking system notifications about new news
received.\& If set to \fIauto\fR, Newsraft will determine the appropriate command
based on the user environment:
.PP
.PD 0
.IP \(bu 4
\fI"notify-send '\&Newsraft brought %q news!\&'\&"\fR if WAYLAND_DISPLAY or DISPLAY is set in environment
.IP \(bu 4
\fI"osascript -e '\&display notification "Newsraft brought %q news!\&"'\&"\fR if Newsraft was built for macOS operating system
.IP \(bu 4
\fI"printf '\&\ee]9;Newsraft brought %q news!\&\ea'\&"\fR (OSC 9 escape sequence) otherwise
.PD
.PP
.SS proxy (*)
Default: \fI""\fR.\& Sets the proxy to use for the network requests.\& It must be either
a hostname or dotted numerical IPv4 address.\& To specify IPv6 address you have to
enclose it within square brackets.\& Port number can be set by appending :PORT to
the end of setting value.\& By default proxy protocol is considered HTTP, but you
can set a different one by prepending SCHEME:// to the setting value.\&
.PP
.SS proxy-user (*)
Default: \fI""\fR.\& User for authentication with the proxy server.\&
.PP
.SS proxy-password (*)
Default: \fI""\fR.\& Password for authentication with the proxy server.\&
.PP
.SS global-section-name
Default: \fIGlobal\fR.\& Name of the section that contains all feeds.\&
.PP
.SS global-section-hide
Default: \fIfalse\fR.\& If \fItrue\fR, global section will not be shown.\&
.PP
.SS status-show-menu-path
Default: \fItrue\fR.\& If \fItrue\fR, print menu path in the status bar.\&
.PP
.SS status-placeholder
Default: \fIr:reload  R:reload-all  tab:explore  d:read  D:unread  f:important F:unimportant  n:next-unread  N:prev-unread  p:next-important P:prev-important\fR.\&
.PP
Placeholder which is put in the status bar if it'\&s empty.\&
.PP
.SS item-content-format (*)
Default: \fI<b>Feed</b>:&nbsp;&nbsp;%f<br>|<b>Title</b>:&nbsp;%t<br>|<b>Date</b>:&nbsp;&nbsp;%d<br>|<br>%c<br>|<br><hr>%L\fR.\&
.PP
Sets the HTML format according to which the item'\&s content will be generated.\&
Fields are separated by \fI|\fR character and ONLY one specifier can be placed in
each field.\& If an item doesn'\&t have a value corresponding to the specifier in
the field, then the entire field will not be shown.\& Specifiers are as follows:
.PP
.RS 4
\fIf\fR	feed title if set, feed link otherwise;
.br
\fIt\fR	item title;
.br
\fIl\fR	item link;
.br
\fId\fR	item date;
.br
\fIa\fR	item authors;
.br
\fIc\fR	item content;
.br
\fIL\fR	item links list.\&
.PP
.RE
.SS item-content-date-format (*)
Default: \fI%a, %d %b %Y %H:%M:%S %z\fR.\& Date format in the item'\&s content.\&
Specifier values correspond to the \fBstrftime\fR(3) format.\&
.PP
.SS item-content-link-format (*)
Default: \fI<b>[%i]</b>:&nbsp;%l<br>\fR.\& Link format in the links list of item'\&s
content.\& \fI%i\fR and \fI%l\fR will be replaced by link index and link address
respectively.\&
.PP
.SS list-entry-date-format
Default: \fI%b %d\fR.\& Date format of the list entries.\& Specifier values correspond
to the \fBstrftime\fR(3) format.\&
.PP
.SS menu-section-entry-format
Default: \fI%5.\&0u @ %t\fR.\& Format of the section list entries.\& Specifiers are as
follows:
.PP
.RS 4
\fIi\fR	index number;
.br
\fIu\fR	unread items count;
.br
\fIt\fR	section title.\&
.PP
.RE
.SS menu-feed-entry-format
Default: \fI%5.\&0u │ %t\fR.\& Format of the feed list entries.\& Specifiers are as
follows:
.PP
.RS 4
\fIi\fR	index number;
.br
\fIu\fR	unread items count;
.br
\fIl\fR	feed link;
.br
\fIt\fR	feed name if set, feed link otherwise.\&
.PP
.RE
.SS menu-item-entry-format
Default: \fI" %u │ %d │ %o"\fR.\& Format of the item list entries.\& Specifiers are
as follows:
.PP
.RS 4
\fIi\fR	index number;
.br
\fIu\fR	"N" if item is unread, " " otherwise;
.br
\fId\fR	update date formatted according to \fBlist-entry-date-format\fR;
.br
\fID\fR	publication date formatted according to \fBlist-entry-date-format\fR;
.br
\fIl\fR	item link;
.br
\fIt\fR	item title;
.br
\fIo\fR	item title if set, item link otherwise;
.br
\fIL\fR	feed link;
.br
\fIT\fR	feed title;
.br
\fIO\fR	feed title if set, feed link otherwise.\&
.PP
.RE
.SS menu-explore-item-entry-format
Default: \fI" %u │ %d │ %-28O │ %o"\fR.\& Format of the item list entries in
explore mode.\& Specifiers are the same as in \fBmenu-item-entry-format\fR.\&
.PP
.SS sections-menu-paramount-explore
Default: \fIfalse\fR.\& Enables explore mode in sections menu by default.\&
.PP
.SS feeds-menu-paramount-explore
Default: \fIfalse\fR.\& Enables explore mode in feeds menu by default.\&
.PP
.SS mark-item-unread-on-change (*)
Default: \fIfalse\fR.\& Mark every item that changes on a feed update as unread.\&
.PP
.SS mark-item-read-on-hover (*)
Default: \fIfalse\fR.\& Mark every item that gets selected as read.\&
.PP
.SS database-batch-transactions
Default: \fItrue\fR.\& Apply all changes to the \fBdatabase\fR file in one big transaction
after all feed updates have finished instead of using a separate transaction for
each feed update.\& This improves update performance a lot with the downside that
fetched content will not be saved if you quit Newsraft before update finishes.\&
.PP
.SS database-analyze-on-startup
Default: \fItrue\fR.\& Run "ANALYZE" SQLite command on the database every time you
start Newsraft.\& It gathers statistics about database and uses it to optimize
some queries making runtime faster.\&
.PP
.SS database-clean-on-startup
Default: \fIfalse\fR.\& Run "VACUUM" SQLite command on the database every time you
start Newsraft.\& It rebuilds the database file by packing it into a minimal
amount of disk space.\& This can significantly increase startup time.\&
.PP
.SS download-timeout (*)
Default: \fI20\fR.\& Maximum time in seconds that you allow Newsraft to download one
feed.\& Setting to \fI0\fR disables the timeout.\&
.PP
.SS download-speed-limit (*)
Default: \fI0\fR.\& Maximum download speed in kilobytes per second (kB/s).\& Setting to
\fI0\fR disables the limit.\&
.PP
.SS download-max-connections
Default: \fI500\fR.\& Maximum amount of simultaneously open connections Newsraft may
hold in total.\& If set to \fI0\fR, there is no limit.\& You can try to increase this
value or even set it to \fI0\fR if you want to squeeze out all performance to the
last drop but be aware that things can start to break at high setting values.\&
One obvious example is getaddrinfo() starts to choke with a large number of
simultaneous requests trying to resolve domain names.\&
.PP
.SS download-max-host-connections
Default: \fI0\fR.\& Maximum amount of simultaneously open connections Newsraft may
hold a single host.\& If set to \fI0\fR, there is no limit.\&
.PP
.SS user-agent (*)
Default: \fIauto\fR.\& User-Agent header sent with download requests.\& If set to
\fIauto\fR, Newsraft will generate it according to the following format:
.PP
.RS 4
\fI"newsraft/"\fR + NEWSRAFT_VERSION + \fI" ("\fR + OS_NAME + \fI")"\fR
.PP
.RE
OS_NAME shouldn'\&t be a matter of privacy concern, because on most systems it
contains nothing more like \fI"Linux"\fR or \fI"Darwin"\fR.\& If you want to be sure of
this, check Newsraft log to see how \fBuser-agent\fR is set at startup.\&
.PP
If set to \fI""\fR, User-Agent header will not be sent.\&
.PP
.SS respect-ttl-element (*)
Default: \fItrue\fR.\& Prevents too frequent updates for some feeds.\& The limit is set
by the creators of the feeds in order to save traffic and resources for a very
rarely updated feeds.\& Disabling it is strongly discouraged.\&
.PP
.SS respect-expires-header (*)
Default: \fItrue\fR.\& Prevents feed updates until the expiration date of the
previously downloaded information in order to save traffic and resources.\&
Disabling it is strongly discouraged.\&
.PP
.SS send-if-none-match-header (*)
Default: \fItrue\fR.\& Sends an entity tag corresponding to the previously downloaded
information.\& If the server from which the feed is downloaded contains
information with the same tag, then in order to save traffic and resources, it
will reject the download request.\& Disabling it is strongly discouraged.\&
.PP
.SS send-if-modified-since-header (*)
Default: \fItrue\fR.\& Sends a date corresponding to the last modification of
previously downloaded information.\& If the server from which the feed is
downloaded contains information with the same modification date, then in order
to save traffic and resources, it will reject the download request.\& Disabling it
is strongly discouraged.\&
.PP
.SS ignore-no-color
Default: \fIfalse\fR.\& If \fItrue\fR, Newsraft will use colors regardless of whether
\fBNO_COLOR\fR environment variable is present or not.\&
.PP
.SH COLOR SETTINGS
.PP
Color settings are the same settings as above, but they take two color words
(foreground and background) and optional attribute words.\& Available colors are
\fIdefault\fR, \fIblack\fR, \fIred\fR, \fIgreen\fR, \fIyellow\fR, \fIblue\fR, \fImagenta\fR, \fIcyan\fR, \fIwhite\fR
and \fIcolorN\fR (\fIN\fR can be a number from \fI0\fR to \fI255\fR).\& Available attributes are
\fIbold\fR, \fIitalic\fR and \fIunderlined\fR.\&
.PP
.TS
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
Color setting
T}	T{
Default value
T}
T{
\fBcolor-status\fR
T}	T{
\fIgreen default bold\fR
T}
T{
\fBcolor-status-info\fR
T}	T{
\fIcyan default bold\fR
T}
T{
\fBcolor-status-fail\fR
T}	T{
\fIred default bold\fR
T}
T{
\fBcolor-list-item\fR
T}	T{
\fIdefault default\fR
T}
T{
\fBcolor-list-item-unread\fR
T}	T{
\fIyellow default\fR
T}
T{
\fBcolor-list-item-important\fR
T}	T{
\fImagenta default\fR
T}
T{
\fBcolor-list-feed\fR
T}	T{
\fIdefault default\fR
T}
T{
\fBcolor-list-feed-unread\fR
T}	T{
\fIyellow default\fR
T}
T{
\fBcolor-list-feed-failed\fR
T}	T{
\fIred default\fR
T}
T{
\fBcolor-list-section\fR
T}	T{
\fIdefault default\fR
T}
T{
\fBcolor-list-section-unread\fR
T}	T{
\fIyellow default\fR
T}
T{
\fBcolor-list-section-failed\fR
T}	T{
\fIred default\fR
T}
.TE
.sp 1
.SH ACTIONS
.PP
.TS
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
Actions
T}	T{
Keys
T}
T{
\fBselect-next\fR
T}	T{
\fIj\fR, \fIKEY_DOWN\fR, \fI^E\fR
T}
T{
\fBselect-prev\fR
T}	T{
\fIk\fR, \fIKEY_UP\fR, \fI^Y\fR
T}
T{
\fBselect-next-page\fR
T}	T{
\fIspace\fR, \fI^F\fR, \fIKEY_NPAGE\fR
T}
T{
\fBselect-next-page-half\fR
T}	T{
\fI^D\fR
T}
T{
\fBselect-prev-page\fR
T}	T{
\fI^B\fR, \fIKEY_PPAGE\fR
T}
T{
\fBselect-prev-page-half\fR
T}	T{
\fI^U\fR
T}
T{
\fBselect-first\fR
T}	T{
\fIg\fR, \fIKEY_HOME\fR
T}
T{
\fBselect-last\fR
T}	T{
\fIG\fR, \fIKEY_END\fR
T}
T{
\fBjump-to-next\fR
T}	T{
\fIJ\fR
T}
T{
\fBjump-to-prev\fR
T}	T{
\fIK\fR
T}
T{
\fBjump-to-next-unread\fR
T}	T{
\fIn\fR
T}
T{
\fBjump-to-prev-unread\fR
T}	T{
\fIN\fR
T}
T{
\fBjump-to-next-important\fR
T}	T{
\fIp\fR
T}
T{
\fBjump-to-prev-important\fR
T}	T{
\fIP\fR
T}
T{
\fBnext-error\fR
T}	T{
\fIe\fR
T}
T{
\fBprev-error\fR
T}	T{
\fIE\fR
T}
T{
\fBgoto-feed\fR
T}	T{
\fI*\fR
T}
T{
\fBshift-west\fR
T}	T{
\fI,\fR
T}
T{
\fBshift-east\fR
T}	T{
\fI.\&\fR
T}
T{
\fBshift-reset\fR
T}	T{
\fI<\fR
T}
T{
\fBsort-by-time\fR
T}	T{
\fIt\fR
T}
T{
\fBsort-by-time-download\fR
T}	T{
(not set)
T}
T{
\fBsort-by-time-publication\fR
T}	T{
(not set)
T}
T{
\fBsort-by-time-update\fR
T}	T{
(not set)
T}
T{
\fBsort-by-rowid\fR
T}	T{
\fIw\fR
T}
T{
\fBsort-by-unread\fR
T}	T{
\fIu\fR
T}
T{
\fBsort-by-initial\fR
T}	T{
\fIz\fR
T}
T{
\fBsort-by-alphabet\fR
T}	T{
\fIa\fR
T}
T{
\fBsort-by-important\fR
T}	T{
\fIi\fR
T}
T{
\fBenter\fR
T}	T{
\fIenter\fR, \fIl\fR, \fIKEY_ENTER\fR, \fIKEY_RIGHT\fR
T}
T{
\fBreload\fR
T}	T{
\fIr\fR
T}
T{
\fBreload-all\fR
T}	T{
\fIR\fR, \fI^R\fR
T}
T{
\fBmark-read\fR; \fBjump-to-next\fR
T}	T{
\fId\fR
T}
T{
\fBmark-unread\fR; \fBjump-to-next\fR
T}	T{
\fID\fR
T}
T{
\fBmark-read-all\fR
T}	T{
\fIA\fR
T}
T{
\fBmark-unread-all\fR
T}	T{
(not set)
T}
T{
\fBmark-important\fR
T}	T{
\fIf\fR
T}
T{
\fBmark-unimportant\fR
T}	T{
\fIF\fR
T}
T{
\fBtoggle-read\fR
T}	T{
(not set)
T}
T{
\fBtoggle-important\fR
T}	T{
(not set)
T}
T{
\fBtoggle-explore-mode\fR
T}	T{
\fItab\fR
T}
T{
\fBview-errors\fR
T}	T{
\fIv\fR
T}
T{
\fBopen-in-browser\fR
T}	T{
\fIo\fR
T}
T{
\fBcopy-to-clipboard\fR
T}	T{
\fIy\fR, \fIc\fR
T}
T{
\fBstart-search-input\fR
T}	T{
\fI/\fR
T}
T{
\fBclean-status\fR
T}	T{
\fI`\fR
T}
T{
\fBnavigate-back\fR
T}	T{
\fIh\fR, \fIbackspace\fR, \fIKEY_LEFT\fR, \fIKEY_BACKSPACE\fR
T}
T{
\fBquit\fR
T}	T{
\fIq\fR
T}
T{
\fBquit-hard\fR
T}	T{
\fIQ\fR
T}
.TE
.sp 1
You can also bind \fIescape\fR key, but this can potentially lead to incomplete
processing of escape sequences in the terminal on a very fast input.\& This is
due to the special role of the \fIescape\fR character under the hood of terminals.\&
Your mileage may vary.\&
.PP
.SH FORMATS SUPPORT
.PP
Data formats of feeds which Newsraft recognizes.\& Not the whole functionality of
these formats is implemented, but only the functionality that is most likely to
carry the most essential information.\&
.PP
\fIRSS 2.\&0\fR, \fI1.\&1\fR, \fI1.\&0\fR, \fI0.\&94\fR, \fI0.\&93\fR, \fI0.\&92\fR, \fI0.\&91\fR, \fI0.\&9\fR
.br
\fIAtom 1.\&0\fR
.br
\fIRSS Content Module\fR
.br
\fIMedia RSS\fR
.br
\fIDublinCore 1.\&1 Elements\fR
.br
\fIJSON Feed\fR
.PP
.SH ENVIRONMENT
.PP
Newsraft'\&s behavior depends on the environment variables set, however not all
environment variables affect Newsraft directly - many environment variables
affect libraries that Newsraft is built upon.\& For example, \fBlibcurl\fR(3)
recognizes a large number of different environment variables which you can learn
more about on \fBlibcurl-env\fR(3).\&
.PP
.TS
l lx
l l
l l
l l
l l
l l
l l.
T{
\fBXDG_CONFIG_HOME\fR
T}	T{
Directory in which user-specific configuration files are stored.\&
T}
T{
\fBXDG_DATA_HOME\fR
T}	T{
Directory in which user-specific data files are stored.\&
T}
T{
\fBHOME\fR
T}	T{
User home directory.\&
T}
T{
\fBBROWSER\fR
T}	T{
User web browser.\&
T}
T{
\fBWAYLAND_DISPLAY\fR
T}	T{
Identifier of the Wayland graphics display.\&
T}
T{
\fBDISPLAY\fR
T}	T{
Identifier of the X graphics display.\&
T}
T{
\fBNO_COLOR\fR
T}	T{
Makes the interface monochrome when present.\&
T}
.TE
.sp 1
.SH SEE ALSO
.PP
\fBmpv\fR(1), \fBfeh\fR(1), \fBsqlite3\fR(1), \fBregex\fR(7), \fBssh\fR(1), \fBstrftime\fR(3), \fBlibcurl\fR(3), \fBlibcurl-env\fR(3)
.PP
.SH BUGS
.PP
Don'\&t be ridiculous.\&.\&.\&
.PP
.SH AUTHORS
.PP
Grigory Kirillov and contributors
