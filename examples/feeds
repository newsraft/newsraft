http://example.org/feed1.xml
# lines with # at start are comments
#I CaN TyPe hErE WhAtEvEr i wAnT
http://example.org/feed2.xml
http://example.org/feed3.xml
# text inside double quotes after the feed url is a custom feed name
# when specified, custom feed names are displayed instead of feed url
http://example.org/feed4.xml "My GNU/Linux distribution news"
# lines with @ at start are decorations
# you can see them in menu, but can't select
@-----+[favorite podcasts]+-----
http://example.org/feed5.xml "Weekly Tech Digest"
http://example.org/feed6.xml
# you can tag your feeds so they can be accessed with filters
# tag is a word of latin alphabet characters, digits and underscores
# using other symbols may lead to errors
http://example.org/feed7.xml cooking podcast spanish
# keep in mind that custom feed name has to be specified before any tags
http://example.org/feed8.xml "News Broadcasts" local_news podcast
http://example.org/feed9.xml "Weather" podcast
# fun fact 1: decorations can be empty, leaving empty line in menu
# fun fact 2: decorations can be specified in sequence
@
@  <<- My FiLTeRS ->>
# to define a filter use ! at start of the line
# note that filters can be specified in every position of file
# it is placed here for educational goals, but you can
# place all your filters to the top of file and use it perfectly fine
!cooking
# you can use logical operators ("&" is AND, "|" is OR) in filters
# also round brackets "(" and ")" are available. whitespace doesn't matter
!podcast & ( local_news | cooking )
# to give filter a name, put double quoted string after tag expression
!spanish & podcast "Learning Spanish"
